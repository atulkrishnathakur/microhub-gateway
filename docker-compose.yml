# version: '3.9' # It not in use in docker compose latest version
services:
  microhub-gateway: # FastAPI application service
    build:
      context: . # Directory containing the Dockerfile
      dockerfile: Dockerfile # Path to the Dockerfile for building the image
    image: microhub-gateway:latest # Using the common image name defined above.
    container_name: microhubgatewaycontainer # Custom name for the container.
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload # Start FastAPI server.
    # for poduction
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
    env_file: 
      - .env # Load all environment variables from .env file.
    environment:
      - DEBUG=$DEBUG
    volumes:
      - .:/microhub-gateway  # Bind-mounted local directory for live updates.
    networks:
      - microhubnetwork # Connects service to a custom network.
    restart: unless-stopped # Automatically restarts on system reboot but not when manually stopped.

  microhub_redis: # Redis service (broker for Celery tasks).
    image: redis:latest # Using latest Redis official image.
    container_name: microhubrediscontainer # Custom name for the container.
    ports:
      - "6379:6379" # Maps Redis default port.
    networks:
      - microhubnetwork # Connects Redis to the custom network.
    restart: unless-stopped # Restarts on system reboot but remains stopped if manually stopped.

  microhub_celery: # Background task processor using Celery.
    build:
      context: . # Directory containing the Dockerfile
      dockerfile: Dockerfile # Path to the Dockerfile for building the image
    image: microhub-gateway:latest # Using the common image name defined microhub-gateway.
    container_name: microhubcelerycontainer # Custom name for the Celery worker container.
    command: celery -A app.celery_app worker --loglevel=info # Start Celery worker.
    env_file: 
      - .env # Load all environment variables from .env file.
    environment:
      - CELERY_BROKER_URL=$CELERY_BROKER_URL # Connect Celery to Redis as broker.
      - CELERY_RESULT_BACKEND=$CELERY_RESULT_BACKEND # Store Celery task results in Redis.
    depends_on:
      - microhub_redis # Ensures Redis starts before Celery worker.
    networks:
      - microhubnetwork # Connects Celery worker to the same network.
    restart: unless-stopped # Restarts on system reboot but remains stopped if manually stopped.

networks:
  microhubnetwork: # Defines a custom network for communication.
    driver: bridge # Bridge networking mode for container communication.
    name: microhub_network # Explicitly naming the network.
